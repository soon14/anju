<krpano>
 
	<!-- 缩略图标题样式 -->
	<style name="skin_thumbtext_style" url="%SWFPATH%/plugins/textfield.swf" align="bottom" width="100%" autoheight="true" y="0" enabled="false" background="true" backgroundcolor="0x000000" backgroundalpha="0.5" border="false" css="text-align:center; color:#FFFFFF; font-family:Arial;  font-size:12px;" textshadow="1" />
	
<!-- 顶部场景标题  STAR-->
 <layer name="text_biaoti" keep="true" url="%SWFPATH%/plugins/textfield.swf" align="top" x="0" y="35"
       html=""
       css="font-family:STXihei; font-size:17px; color:#ffffff;letter-spacing:2px;text-shadow: rgb(0, 0, 0) 0px 0px 3.2px;"
       autowidth="true" autoheight="auto" vcenter="true"
       padding="4" roundedge="5" 
	   background="false"
       backgroundcolor="0xFFFFFF" backgroundalpha="1.5" handcursor="false" enabled="false"
       /> 
<!-- 顶部场景标题  END-->

    
	<!-- 皮肤设置  -->	
	<layer name="skin_scroll_window" type="container" keep="true" align="leftbottom" width="100%" height="100%" x="0" y="90" y_opened="60" y_closed="-2" maskchildren="true">
		<layer name="skin_scroll_layer" type="container" align="leftbottom" width="100%" height="100%" x="0" y="-100%">
						
			<layer name="skin_scroll_container" type="container" bgcolor="0x000000" bgalpha="0.5" align="lefttop" width="100%" height="100%" x="0" y="0" maskchildren="true">
				
				<layer name="skin_thumbs_container" type="container" align="lefttop" width="100%" height="100%" visible="false">
				
					<layer name="skin_thumbs_scrollleft"  style="skin_base|skin_glow" crop="0|64|64|64"  align="lefttop"  edge="left"  x="5" y="50" scale="0.5" zorder="2" alpha="1.0" ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(+2,0));" visible="false" />
					
					<layer name="skin_thumbs_scrollright" style="skin_base|skin_glow" crop="64|64|64|64" align="righttop" edge="right" x="5" y="50" scale="0.5" zorder="2" alpha="1.0" ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(-2,0));" visible="false" />
					
					<layer name="skin_thumbs_scrollindicator" type="container" bgcolor="0xFFFFFF" bgalpha="0.25" align="lefttop" width="0" y="100" height="4" visible="false" enabled="false" />
					
					<layer name="skin_thumbs" state="closed" url="%SWFPATH%/plugins/scrollarea.swf" alturl="%SWFPATH%/plugins/scrollarea.js" direction="h" align="top" width="100%" height="100" zorder="1" onloaded="skin_updatescroll();" onscroll="skin_updatethumbscroll();" />
					
				</layer>
				
			</layer>
			
		</layer>
	</layer>
	
	
	
    <!-- 皮肤设置  -->
	
    <layer name="skin_loadingtext" keep="true" url="../images/roading.png" scale="0.8" align="center" x="5" y="-5" visible="false" autoheight="true" background="false" border="false" enabled="false" />	
	<layer name="skin_buttonglow"   keep="true" style="skin_base" crop="64|384|64|64" align="center" x="0" y="1" alpha="0.0" visible="false" enabled="false" />
	<layer name="skin_thumbborder"  keep="true" url="../images/vtourskin_thumbborder.png" visible="false" enabled="false" align="lefttop" scale="0.5" ox="-2" oy="-2" />
	

	<krpano devices="mobile">
	<!-- 顶部场景标题  STAR-->
       <layer name="text_biaoti" x="10" y="50" css="font-family:黑体; font-size:22px; color:#FFFFFF;text-shadow: rgb(0, 0, 0) 0px 0px 3.2px;"/>    
     <!-- 顶部场景标题  END-->

		<layer name="skin_scroll_window" y="100" y_opened="100" y_closed="-4">
			<layer name="skin_scroll_layer">
				
				<layer name="skin_scroll_container">
					<layer name="skin_thumbs_container">
						<layer name="skin_thumbs_scrollleft"  scale="1" />
						<layer name="skin_thumbs_scrollright" scale="1" />
						<layer name="skin_thumbs_scrollindicator" height="6" />
						<layer name="skin_thumbs" height="200" />
					</layer>
					
				</layer>
			</layer>
		</layer>

		<layer name="skin_loadingtext" css="text-align:center; color:#FFFFFF; font-family:Arial;font-size:29px;" />
		<layer name="skin_buttonglow"  scale="2.0" />
		<layer name="skin_thumbborder" scale="0.75" />

		<style name="skin_thumbtext_style" css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:23px;" />
	</krpano>


	<!-- Skin Actions -->
 
	<action name="skin_addthumbs">                    
	  set(number_of_used_scenes,0);
	  for(set(i,0), i LT scene.count, inc(i),
          if(scene[get(i)].thumb_display , inc(number_of_used_scenes);	      
		      
		  );
	    ); 
	    
		
		copy(thumbwidth, skin_settings.thumbs_width);
		copy(thumbheight, skin_settings.thumbs_height);
		copy(thumbpadding, skin_settings.thumbs_padding);
		copy(thumbcrop, skin_settings.thumbs_crop);

		if(device.mobile,
			mul(thumbwidth,1.5);
			mul(thumbheight,1.5);
			mul(thumbpadding,1.5);
		  );

		add(thumbxoffset, thumbwidth, thumbpadding);
		mul(thumbxcenter, thumbxoffset, 0.5);
		mul(thumbbarwidth, thumbxoffset, get(number_of_used_scenes));
		
		add(thumbbarwidth, thumbpadding);
		add(thumbbarheight, thumbpadding, thumbheight);
		add(thumbbarheight, thumbpadding);

		if (skin_settings.thumbs_scrollindicator,
			copy(layer[skin_thumbs_scrollindicator].y, thumbbarheight);
			add(thumbbarheight, layer[skin_thumbs_scrollindicator].height);
		);

		copy(layer[skin_thumbs].height, thumbbarheight);
		copy(layer[skin_thumbs].width, thumbbarwidth);

		mul(halfheight, thumbbarheight, 0.5);
		copy(layer[skin_thumbs_scrollleft].y, halfheight);
		copy(layer[skin_thumbs_scrollright].y, halfheight);
		
		set(number_of_active_thumbs,0);
		set(adding_thumbs_from_zerro,0);
		
		for(set(i,0), i LT scene.count, inc(i),
            if(scene[get(i)].thumb_display, 
                 txtadd(thumbname,'skin_thumb_',get(adding_thumbs_from_zerro));    
	             txtadd(thumbnameborder,'skin_thumbborder_',get(adding_thumbs_from_zerro));     
                 copy(scene[get(i)].newindex, number_of_active_thumbs);  
			     inc(number_of_active_thumbs);
			   
			     addlayer(get(thumbname)); 
			     copy(layer[get(thumbname)].url, scene[get(i)].thumburl);
			     set(layer[get(thumbname)].keep, true);
			     set(layer[get(thumbname)].parent, 'skin_thumbs');
			     set(layer[get(thumbname)].align, lefttop);
			     copy(layer[get(thumbname)].crop, thumbcrop);
			     copy(layer[get(thumbname)].width, thumbwidth);
			     copy(layer[get(thumbname)].height, thumbheight);
			
			                                    
			     mul(thumbx, adding_thumbs_from_zerro, thumbxoffset);
									
			     add(thumbx, thumbpadding);
			     copy(layer[get(thumbname)].x, thumbx);
			     copy(layer[get(thumbname)].y, thumbpadding);
			     add(scene[get(i)].thumbx, thumbx, thumbxcenter);
			     copy(scene[get(i)].thumby, thumbpadding);
			
			    if(device.mobile,
				   set(layer[get(thumbnameborder)].scale, 1)
				   ,
				   set(layer[get(thumbnameborder)].scale, 0.5)
			    );
				
			    set(layer[get(thumbnameborder)].ox, -2);
			    set(layer[get(thumbnameborder)].oy, -2);
			    set(layer[get(thumbnameborder)].enabled, false);
			
			   set(layer[get(thumbname)].linkedscene, get(scene[get(i)].name) );
			
			   set(layer[get(thumbname)].onclick, if(layer[skin_thumbborder].parent != name,copy(layer[skin_thumbborder].parent, name);loadscene(get(linkedscene), null, MERGE, BLEND(0.5));););
			   
			   if(skin_settings.tooltips_thumbs,
				   set(layer[get(thumbname)].onhover, showtext(get(scene[get(linkedscene)].title_hover),SKIN_TOOLTIPS); );
			    );
				
			   if(skin_settings.thumbs_text,				                                                    
				   txtadd(thumbtext, 'skin_thumbtext_', get(adding_thumbs_from_zerro));
				   addlayer(get(thumbtext));
				   layer[get(thumbtext)].loadstyle(skin_thumbtext_style);
				   set(layer[get(thumbtext)].keep, true);
				   set(layer[get(thumbtext)].parent, get(thumbname));
				   set(layer[get(thumbtext)].html, get(scene[get(i)].title));
			    );
		        inc(adding_thumbs_from_zerro);
		    );
		   
		);
	</action>
    
	<action name="switchscene">
		txtsplit(get(scene[get(currscene)].name),'_',scenea,sceneb,sceneid);		
		set(layer[alwaysflag_0].visible,true);		
		set(layer[get(currceshi)].visible,true);		
		set(currceshi,get(panoflag));		
				
	</action>
	
	<action name="getduihao">
	for(set(i,0), i LT scene.count, inc(i),
			txtadd(thumbname,'skin_thumb_',get(i));
				if(layer[get(thumbname)].linkedscene == currscene
					,
						txtadd(panoflag,'alwaysflag_',get(i));
						break;
				);
		);
	</action>
	
	<action name="skin_onresize">
		mul(mh, area.pixelheight, -1);
		if(layer[skin_thumbs].state == 'opened', add(mh,layer[skin_thumbs].height); );		
		set(layer[skin_scroll_layer].y, get(mh));
		ifnot(device.mobile, if(area.pixelwidth LT 480, skin_showbuttons(false), skin_showbuttons(true)); );
	</action>

	<action name="skin_showbuttons">
		set(layer[skin_btn_lt].visible, %1);
		set(layer[skin_btn_rt].visible, %1);
		set(layer[skin_btn_up].visible, %1);
		set(layer[skin_btn_dn].visible, %1);
		set(layer[skin_btn_in].visible, %1);
		set(layer[skin_btn_ou].visible, %1);		
	</action>

	<action name="skin_updatescroll">
		if(layer[skin_thumbs].loaded,
			set(cursceneindex, 0);
			if(xml.scene, copy(cursceneindex, scene[get(xml.scene)].index));
			layer[skin_thumbs].setcenter(get(scene[get(cursceneindex)].thumbx), get(scene[get(cursceneindex)].thumby));
		  );
	</action>

	<action name="skin_updatethumbscroll">
		copy(padding,skin_settings.thumbs_padding);
		if(device.mobile, mul(padding,2));

		if(skin_settings.thumbs_scrollbuttons,
			if(loverflow GT 0, set(layer[skin_thumbs_scrollleft].visible,true),  set(layer[skin_thumbs_scrollleft].visible,false) );
			if(roverflow GT 0, set(layer[skin_thumbs_scrollright].visible,true), set(layer[skin_thumbs_scrollright].visible,false) );
		  );

		if(skin_settings.thumbs_scrollindicator,
			if(woverflow GT 0,
				set(layer[skin_thumbs_scrollindicator].visible,true);
				sub(iw,pixelwidth,woverflow);
				div(pw,iw,pixelwidth);
				div(px,loverflow,woverflow);
				mul(pw,iw);
				copy(layer[skin_thumbs_scrollindicator].width,pw);
				sub(iw,pw);
				sub(iw,padding);
				sub(iw,padding);
				mul(px,iw);
				add(px,padding);
				copy(layer[skin_thumbs_scrollindicator].x,px);
			  ,
				set(layer[skin_thumbs_scrollindicator].visible,false);
			  );
		  );
	</action>




	<!-- 缩略图标题样式 -->
	<action name="skin_update_scene_infos">
	    set(layer[text_biaoti].html,get(scene[get(xml.scene)].title));	
	    if(xml.scene != null,
		   if(title,		   
		      set(layer[skin_title].html,'');		   
		      txtadd(layer[skin_title].html, get(title), ' ', ) 
		    ) 
		, 
		   copy(layer[skin_title].html, scene[get(xml.scene)].title ); 
	    );
		   
		delayedcall(0.1, set(layer[skin_title].visible,true););
			
		 set(firstscene_panonum,0);		
		 set(scene_true,0);		 
		 for(set(k,1), k LE scene.count, inc(k),
			     if(scene[get(k)].thumb_display == "true", set(scene_true,1));
			  ); 		
		if(scene_true == 1,
		 for(set(i,1), scene[get(i)].thumb_display != "true", inc(i),
			     add(firstscene_panonum,0);
			  );
			); 
		  
		if(scene_true == 0,
			
			     for(set(i,0), i LT scene.count, inc(i),
			     add(firstscene_panonum,0);
			  );
			);
			
		if(scene[get(xml.scene)].index GT firstscene_panonum,
			set(layer[skin_btn_prev].enabled, true);
			set(layer[skin_btn_prev].alpha, 1.0);
		  ,
			set(layer[skin_btn_prev].enabled, false);
			set(layer[skin_btn_prev].alpha, 0.3);
		  );

		sub(lastsceneindex, scene.count, 1);
		for(set(i,0), scene[get(lastsceneindex)].thumb_display != true, inc(i),
			     sub(lastsceneindex, 1);
			  );
		
		if(scene[get(xml.scene)].index LT lastsceneindex,
			set(layer[skin_btn_next].enabled, true);
			set(layer[skin_btn_next].alpha, 1.0);
		  ,
			set(layer[skin_btn_next].enabled, false);
			set(layer[skin_btn_next].alpha, 0.3);
		  );
       
	   copy(q,scene[get(xml.scene)].index);
	   for(set(i,0), scene[get(q)].thumb_display != true, inc(i),
			     sub(q,1);
			  );
	    
			  
		txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(scene[get(q)].newindex));
		
		<!-- div(now_x,skin_settings.thumbs_width,2);
        add(now_x,layer[get(parentname)].x);
        layer[skin_thumbs].scrolltocenter(get(now_x),0); -->
		
		set(layer[skin_thumbborder].visible, true);
		  
	
		</action>
    <!-- 缩略图标题样式 -->

	<action name="skin_nextscene">
	 
		add(newsceneindex, scene[get(xml.scene)].index, %1);
		if(newsceneindex GE 0,
			if(newsceneindex LT scene.count,
				txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(newsceneindex));
				layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
				loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend));
				
			  );
		  );
	</action>

	<action name="skin_nextscene_loop">
		add(newsceneindex, scene[get(xml.scene)].index, %1);
		sub(lastsceneindex, scene.count, 1);
		if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));
		if(newsceneindex GT lastsceneindex, set(newsceneindex,0));
		layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
		loadscene(get(scene[get(newsceneindex)].name),null,get(skin_settings.loadscene_flags),get(skin_settings.loadscene_blend));
	</action>

	<!-- 加载进度 -->
	<!-- VR模式下不显示加载字样 -->
	<action name="skin_showloading">
		if(display.stereo == true,
			set(layer[skin_loadingtext].visible, false);
		  ,
			set(loadingpercent_isloading, true);
		   set(layer[skin_loadingtext].visible, true);
		
		    asyncloop(loadingpercent_isloading,
			mul(pv, progress.progress, 100);
			roundval(pv,0);
			txtadd(layer[skin_loadingtext].html, get(skin_settings.loading), get(pv), '%');
		     );
		);
	</action>
		
	<action name="loadingpercent_stoploading">
		set(loadingpercent_isloading, false); 
		set(layer[skin_loadingtext].visible, false);
	</action>
	<!-- 加载进度 -->
	
	<action name="skin_hidetooltips">
		set(layer[skin_tooltip].alpha,0.0);
		set(layer[skin_tooltip].visible,false);
	</action>

	<action name="skin_buttonglow">
		if(%1 != null,
			set(strength,0.7);
			if(%2 != null, set(strength,%2));
			set(layer[skin_buttonglow].parent, %1);
			set(layer[skin_buttonglow].visible, true);
			tween(layer[skin_buttonglow].alpha, get(strength), 0.07);
		  ,
			tween(layer[skin_buttonglow].alpha, 0.0, 0.1, default, set(layer[skin_buttonglow].parent, null); set(layer[skin_buttonglow].visible, false); );
		  );
	</action>

	<action name="skin_hideskin">		
		if(layer[skin_thumbs].state != 'closed', skin_showthumbs(false); wait(0.25); );
		tween(layer[skin_scroll_window].y, get(layer[skin_scroll_window].y_closed), 0.5, easeOutQuint);
		
		set(layer[skin_btn_show].visible,true);
		tween(layer[skin_btn_show].alpha, 1, 0.25, easeOutQuint);
	</action>

	<action name="skin_showskin">
		tween(layer[skin_scroll_window].y, get(layer[skin_scroll_window].y_opened), 0.5, easeOutQuint);
		
		set(layer[skin_btn_show].visible,false);
		tween(layer[skin_btn_show].alpha,0,0);
	</action>

	<action name="skin_showthumbs">
		if(%1 == null, 
		   if(layer[skin_thumbs].state == 'closed', 
		      set(show,true);			 
			  , 
			  set(show,false);			  
			  ); 
		   , 
		   set(show,%1); 
		);
		mul(mh, layer[skin_scroll_layer].pixelheight, -1);
		if(layer[skin_scroll_layer].y == -100%, copy(layer[skin_scroll_layer].y,mh));
		
		if(show,
			set(layer[skin_thumbs].state, 'opened');
			add(mh, layer[skin_thumbs].height);
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);
			set(layer[skin_thumbs_container].visible, true);
			if(device.mobile ==false,
		       tween(layer[skin_scroll_window].y, 90, 0.5, easeOutQuint);
		        ,
		       tween(layer[skin_scroll_window].y, 125, 0.5, easeOutQuint);
		    );			
			tween(layer[skin_thumbs_container].alpha, 1.0, 0.25);
			
		  ,
			set(layer[skin_thumbs].state, 'closed');
			tween(layer[skin_scroll_window].y, -100, 0.5, easeOutQuint);			
			tween(layer[skin_scroll_layer].y, get(mh), 0.5);
			
		  );
	</action>

</krpano>
